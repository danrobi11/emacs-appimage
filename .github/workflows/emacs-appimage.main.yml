name: Build Emacs AppImage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04  # Stable glibc 2.35
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential git wget \
            autoconf automake libtool pkg-config make \
            libgtk-3-dev libglib2.0-dev libx11-dev \
            libncurses-dev libxml2-dev libjansson-dev \
            fuse libfuse2 xterm

      - name: Clone Emacs source
        run: |
          git clone https://git.savannah.gnu.org/git/emacs.git
          cd emacs
          git checkout emacs-29.4  # Latest stable as of March 2025

      - name: Build Emacs
        run: |
          cd emacs
          ./autogen.sh
          ./configure --prefix=/tmp/appdir/usr --with-x-toolkit=gtk3 --with-x
          make -j$(nproc)
          make install

      - name: Bundle libraries
        run: |
          mkdir -p /tmp/appdir/usr/lib
          for lib in \
            libgtk-3.so.0 libgdk-3.so.0 libglib-2.0.so.0 libgobject-2.0.so.0 \
            libgmodule-2.0.so.0 libpango-1.0.so.0 libpangocairo-1.0.so.0 \
            libcairo.so.2 libX11.so.6 libncursesw.so.6 libxml2.so.2 \
            libjansson.so.4 libc.so.6 ld-linux-x86-64.so.2; do
            cp -v /usr/lib/x86_64-linux-gnu/$lib /tmp/appdir/usr/lib/ 2>/dev/null || \
            cp -v /lib/x86_64-linux-gnu/$lib /tmp/appdir/usr/lib/ 2>/dev/null || \
            echo "Warning: $lib not found"
          done

      - name: Download linuxdeployqt and appimagetool
        run: |
          wget -c https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -O linuxdeployqt
          wget -c https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
          chmod +x linuxdeployqt appimagetool

      - name: Create AppRun
        run: |
          cat << 'EOF' > /tmp/appdir/AppRun
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          export PATH="$HERE/usr/bin:$PATH"
          export LD_LIBRARY_PATH="$HERE/usr/lib:$LD_LIBRARY_PATH"
          "$HERE/usr/lib/ld-linux-x86-64.so.2" "$HERE/usr/bin/emacs" "$@"
          EOF
          chmod +x /tmp/appdir/AppRun

      - name: Create desktop file
        run: |
          cat << 'EOF' > /tmp/appdir/emacs.desktop
          [Desktop Entry]
          Name=Emacs
          Exec=emacs
          Type=Application
          Icon=emacs
          Categories=Development;TextEditor;
          Terminal=false
          EOF

      - name: Copy icon
        run: |
          mkdir -p /tmp/appdir/usr/share/icons/hicolor/48x48/apps
          cp /tmp/appdir/usr/share/emacs/29.4/etc/images/icons/hicolor/48x48/apps/emacs.png \
             /tmp/appdir/usr/share/icons/hicolor/48x48/apps/ 2>/dev/null || \
          wget -O /tmp/appdir/emacs.png "https://www.gnu.org/software/emacs/images/emacs.png" || echo "Icon download failed"
          cp /tmp/appdir/emacs.png /tmp/appdir/usr/share/icons/hicolor/48x48/apps/emacs.png || true
          chmod 644 /tmp/appdir/emacs.png /tmp/appdir/usr/share/icons/hicolor/48x48/apps/emacs.png || true

      - name: Bundle with linuxdeployqt
        run: |
          ./linuxdeployqt /tmp/appdir/usr/bin/emacs -bundle-non-qt-libs -verbose=2

      - name: Package AppImage
        run: |
          ./appimagetool --no-appstream -v /tmp/appdir emacs-29.4-x86_64.AppImage

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: emacs-appimage
          path: emacs-29.4-x86_64.AppImage
